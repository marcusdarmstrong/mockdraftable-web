// flow-typed signature: cfbd4ff6f4d434760671080444630fd1
// flow-typed version: <<STUB>>/pg-promise_v5.5.6/flow_v0.38.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'pg-promise'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'pg-promise' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'pg-promise/lib/adapter' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/array' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/async' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/cnContext' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/connect' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/database' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/index' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/paramQuery' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/prepared' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/queryFile' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/queryResult' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/events' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/formatting' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/column' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/columnSet' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/index' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/concat' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/insert' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/sets' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/update' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/values' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/tableName' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/index' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/promise' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/query' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/queryFile' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/result' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/special' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/stream' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/task' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/txMode' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types/index' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types/parameterized' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types/prepared' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/utils/index' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/utils/public' {
  declare module.exports: any;
}

// Filename aliases
declare module 'pg-promise/lib/adapter.js' {
  declare module.exports: $Exports<'pg-promise/lib/adapter'>;
}
declare module 'pg-promise/lib/array.js' {
  declare module.exports: $Exports<'pg-promise/lib/array'>;
}
declare module 'pg-promise/lib/async.js' {
  declare module.exports: $Exports<'pg-promise/lib/async'>;
}
declare module 'pg-promise/lib/cnContext.js' {
  declare module.exports: $Exports<'pg-promise/lib/cnContext'>;
}
declare module 'pg-promise/lib/connect.js' {
  declare module.exports: $Exports<'pg-promise/lib/connect'>;
}
declare module 'pg-promise/lib/database.js' {
  declare module.exports: $Exports<'pg-promise/lib/database'>;
}
declare module 'pg-promise/lib/errors/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/index'>;
}
declare module 'pg-promise/lib/errors/paramQuery.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/paramQuery'>;
}
declare module 'pg-promise/lib/errors/prepared.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/prepared'>;
}
declare module 'pg-promise/lib/errors/queryFile.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/queryFile'>;
}
declare module 'pg-promise/lib/errors/queryResult.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/queryResult'>;
}
declare module 'pg-promise/lib/events.js' {
  declare module.exports: $Exports<'pg-promise/lib/events'>;
}
declare module 'pg-promise/lib/formatting.js' {
  declare module.exports: $Exports<'pg-promise/lib/formatting'>;
}
declare module 'pg-promise/lib/helpers/column.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/column'>;
}
declare module 'pg-promise/lib/helpers/columnSet.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/columnSet'>;
}
declare module 'pg-promise/lib/helpers/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/index'>;
}
declare module 'pg-promise/lib/helpers/methods/concat.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/concat'>;
}
declare module 'pg-promise/lib/helpers/methods/insert.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/insert'>;
}
declare module 'pg-promise/lib/helpers/methods/sets.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/sets'>;
}
declare module 'pg-promise/lib/helpers/methods/update.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/update'>;
}
declare module 'pg-promise/lib/helpers/methods/values.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/values'>;
}
declare module 'pg-promise/lib/helpers/tableName.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/tableName'>;
}
declare module 'pg-promise/lib/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/index'>;
}
declare module 'pg-promise/lib/promise.js' {
  declare module.exports: $Exports<'pg-promise/lib/promise'>;
}
declare module 'pg-promise/lib/query.js' {
  declare module.exports: $Exports<'pg-promise/lib/query'>;
}
declare module 'pg-promise/lib/queryFile.js' {
  declare module.exports: $Exports<'pg-promise/lib/queryFile'>;
}
declare module 'pg-promise/lib/result.js' {
  declare module.exports: $Exports<'pg-promise/lib/result'>;
}
declare module 'pg-promise/lib/special.js' {
  declare module.exports: $Exports<'pg-promise/lib/special'>;
}
declare module 'pg-promise/lib/stream.js' {
  declare module.exports: $Exports<'pg-promise/lib/stream'>;
}
declare module 'pg-promise/lib/task.js' {
  declare module.exports: $Exports<'pg-promise/lib/task'>;
}
declare module 'pg-promise/lib/txMode.js' {
  declare module.exports: $Exports<'pg-promise/lib/txMode'>;
}
declare module 'pg-promise/lib/types/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/types/index'>;
}
declare module 'pg-promise/lib/types/parameterized.js' {
  declare module.exports: $Exports<'pg-promise/lib/types/parameterized'>;
}
declare module 'pg-promise/lib/types/prepared.js' {
  declare module.exports: $Exports<'pg-promise/lib/types/prepared'>;
}
declare module 'pg-promise/lib/utils/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/utils/index'>;
}
declare module 'pg-promise/lib/utils/public.js' {
  declare module.exports: $Exports<'pg-promise/lib/utils/public'>;
}
